<?php
/**
 * Class MasterController.
 * @package {NAMESPACE}_{APPNAME}
 */
namespace {NAMESPACE}\{APPNAME}\Controllers;

use Ritc\Library\Controllers\LibraryController;
use Ritc\Library\Controllers\SitemapController;
use Ritc\Library\Interfaces\ControllerInterface;
use Ritc\Library\Services\Di;
use Ritc\Library\Traits\ControllerTraits;
use Ritc\Library\Traits\LogitTraits;

/**
 * Master Controller for {APPNAME}.
 *
 * @author    {author} <{email}>
 * @version   1.0.0-alpha.0
 * @date      {idate}
 * ## Change Log
 * - v1.0.0-alpha.0 - Initial version        - {sdate} {sauthor}
 * @todo {NAMESPACE}/{APPNAME}/Controllers/MasterController.php - Everything
 */
class MasterController implements ControllerInterface
{
    use ControllerTraits, LogitTraits;

    /**
     * MasterController constructor.
     * @param \Ritc\Library\Services\Di $o_di
     */
    public function __construct(Di $o_di)
    {
        $this->setupController($o_di);
        $this->a_object_names = [];
        $this->setupElog($o_di);
    }

    /**
     * Master Router and Puker outer.
     * Turns over the hard work to the specific controllers specified by the router.
     * @return string
     * @TODO: Round out method.
     */
    public function route()
    {
        $route_class = !empty($this->a_router_parts['route_class'])
            ? $this->a_router_parts['route_class']
            : 'HomeController';
        $route_method = !empty($this->a_router_parts['route_method'])
            ? $this->a_router_parts['route_method']
            : 'route';

        switch ($route_class) {
            case 'ManagerController':
                $o_controller = new ManagerController($this->o_di);
                break;
            case 'LibraryController':
                $o_controller = new LibraryController($this->o_di);
                break;
            case 'SitemapController':
                $o_controller = new SitemapController($this->o_di);
                break;
            case 'HomeController':
            default:
                $o_controller = new HomeController($this->o_di);
                break;
        }
        return $o_controller->$route_method();
    }
}
