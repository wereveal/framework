<?php
/**
 * Class {APPNAME}Controller.
 * @package {NAMESPACE}_{APPNAME}
 */
namespace {NAMESPACE}\{APPNAME}\Controllers;

use Ritc\Library\Controllers\LibraryController;
use Ritc\Library\Controllers\SitemapController;
use Ritc\Library\Interfaces\MainControllerInterface;
use Ritc\Library\Services\Di;
use Ritc\Library\Traits\ControllerTraits;

/**
 * Main Controller for {APPNAME}.
 *
 * @author    {author} <{email}>
 * @version   1.0.0-alpha.0
 * @date      {idate}
 * ## Change Log
 * - v1.0.0-alpha.0 - Initial version        - {sdate} {sauthor}
 * @todo {NAMESPACE}/{APPNAME}/Controllers/{APPNAME}Controller.php - Everything
 */
class {APPNAME}Controller implements MainControllerInterface
{
    use ControllerTraits;

    /**
     * {APPNAME}Controller constructor.
     *
     * @param Di $o_di
     */
    public function __construct(Di $o_di)
    {
        $this->setupController($o_di);
    }

    /**
     * Main Router and Puker outer.
     * Turns over the hard work to the specific controllers specified by the router.
     *
     * @return string
     * @TODO: Round out method.
     */
    public function route():string
    {
        $route_class = !empty($this->a_router_parts['route_class'])
            ? $this->a_router_parts['route_class']
            : 'HomeController';
        $route_method = !empty($this->a_router_parts['route_method'])
            ? $this->a_router_parts['route_method']
            : 'route';

        $o_controller = match ($route_class) {
            'ManagerController' => new ManagerController($this->o_di),
            'LibraryController' => new LibraryController($this->o_di),
            'SitemapController' => new SitemapController($this->o_di),
            default             => new HomeController($this->o_di),
        };
        return $o_controller->$route_method();
    }

    /**
     * Resets the router parts and displays the home page.
     *
     * @return string
     */
    public function goHome():string
    {
        $this->o_router->setRouteParts('/');
        return (new HomeController($this->o_di))->route();
    }
}
