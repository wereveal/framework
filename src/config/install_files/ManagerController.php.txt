<?php
/**
 * @brief Manager Controller for {APPNAME}.
 * @ingroup {app_name}_controllers
 * @file {NAMESPACE}/{APPNAME}/Controllers/ManagerController.php
 * @namespace {NAMESPACE}\{APPNAME}\Controllers
 * @author {author} <{email}>
 * @version 1.0.0-alpha.0
 * @date {idate}
 * @note <b>Change Log</b>
 * - v1.0.0-alpha.0 - Initial version                    - {sdate} {sauthor}
**/
namespace {NAMESPACE}\{APPNAME}\Controllers;

use Ritc\Library\Helper\ViewHelper;
use Ritc\Library\Interfaces\ControllerInterface;
use Ritc\Library\Services\Di;
use Ritc\Library\Traits\LogitTraits;
use Ritc\Library\Traits\ManagerControllerTraits;
use {NAMESPACE}\{APPNAME}\Views\ManagerView;

/**
 * Class ManagerController
 * @class ManagerController
 * @package {NAMESPACE}\{APPNAME}\Controllers
 */
class ManagerController implements ControllerInterface
{
    use ManagerControllerTraits, LogitTraits;

    protected $o_view;

    /**
     * LibraryController constructor.
     * @param Di $o_di
     */
    public function __construct(Di $o_di)
    {
        $this->setupManagerController($o_di);
        $this->setupElog($o_di);
        $this->o_view = new ManagerView($o_di);
    }

    /**
     * Default router for the manager.
     * @return string
     */
    public function route()
    {
        $meth = __METHOD__ . '.';
        if ($this->loginValid()) {
            switch ($this->route_action) {
                case '':
                    return $this->o_view->render();
                case 'logout':
                    $people_id = $_SESSION['login_id'];
                    $this->o_auth->logout($a_results['people_id']);
                    $a_message = ViewHelper::successMessage('You are now logged out.');
                    return $this->login($people_id, $a_message);
                default:
                    $action = $this->route_action;
                    return $this->$action();
            }
        }
        elseif ($this->form_action == 'verifyLogin') {
            $a_message = $this->verifyLogin();
            if ($a_message['type'] == 'success') {
                return $this->o_view->render($a_message);
            }
            else {
                $login_id = isset($this->a_post['login_id'])
                    ? $this->a_post['login_id']
                    : '';
                return $this->login($login_id, $a_message);
            }
        }
        else {
            return $this->login();
        }
    }

    /**
     * Does the login stuff.
     * @param string $login_id
     * @param array  $a_message
     * @return string
     */
    protected function login($login_id = '', array $a_message = [])
    {
            $this->o_session->resetSession();
            $a_values = [
                'a_message' => $a_message,
                'location'  => '/manager/',
                'login_id'  => $login_id
            ];
            return $this->o_view->renderLoginForm($a_values);
    }
}
